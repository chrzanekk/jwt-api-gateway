server:
  port: 8080

logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      default-filters:
        - name: RequestRateLimiter
          args:
            redis-rate-limiter:
              replenishRate: 10
              burstCapacity: 20
              requestedTokens: 1
      routes:
        - id: authentication-service
          uri: ${AUTH_SERVICE_URL:http://localhost:9001}
          predicates:
            - Path=/api/auth/**
          filters:
            - name: CircuitBreaker
              args:
                name: authService
                fallbackUri: forward:/auth-fallback
            - name: Retry
              args:
                retries: 3
                method: GET
                backoff:
                  firstBackoff: 50ms
                  maxBackoff: 500ms
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/api/users/**
          filters:
            - AuthenticationFilter
            - name: CircuitBreaker
              args:
                name: userService
                fallbackUri: forward:/auth-fallback
            - name: Retry
              args:
                retries: 3
                method: GET
                backoff:
                  firstBackoff: 50ms
                  maxBackoff: 500ms

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    enabled: true
    service-url:
      defaultZone: http://localhost:8761/eureka

management:
  endpoints:
    web:
      exposure:
        include: "*"
    endpoint:
      health:
        probes:
          enabled: true
        show-details: always
        show-components: always
    metrics:
      tags:
        application: ${spring.application.name}
      distribution:
        percentiles-histogram:
          all: true
          http.server.requests: true
    tracing:
      sampling:
        probability: 1.0
    prometheus:
      metrics:
        export:
          step: 10s
    info:
      env:
        enabled: true
      java:
        enabled: true
      os:
        enabled: true
resilience4j:
  circuitbreaker:
    instances:
      authService:
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 10000
        registerHealthIndicator: true
      userService:
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 10000
        registerHealthIndicator: true
  timelimiter:
    instances:
      authService:
        timeoutDuration: 3s
      userService:
        timeoutDuration: 3s


jwt:
  secret: 4jE4XcimwrEF9PUiOGaasXROjlw9zpkj5Hr59gojyiE6SMcxDBf9sJu/sCX/eazVrd+TyfYB/e8mz0NmgzuMNYmeb/Cw4aI1wOVgihSrVxT9erUXQXaGD8chY4wdWI9yaZOQKOdHcq8HTLYde3Xum34hgIMG3UJfHIfUNfL0a8Z6YiZGnuEnZrCsmMPTufN0o+pWQk5e7NI7fAgveTBvcV04oLJKK5sjky8a3N9rVPX2XZ6UOsG2n7Cvn/940dpy+DqRPBYCfagUyKNmakjAV2Desn7FkZ7dlGgsZGaWvXm3dhQ1l9TSdZTyx6QlLyaLB95pCDojfwaCYwKTEmj6
  expiration: 86400000
tokenValidityTimeInMinutes: 30